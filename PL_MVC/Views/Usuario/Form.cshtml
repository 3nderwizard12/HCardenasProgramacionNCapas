@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Form de usuarios</h2>

<div class="row">

    <div class="col-md-12">
        @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="col">
                @Html.LabelFor(model => model.IdUsuario, new { @class = "visually-hidden" })

                @Html.TextBoxFor(model => model.IdUsuario, new { @class = "visually-hidden form-control" })

                @Html.ValidationMessageFor(model => model.IdUsuario)

            </div>
            <div class="row">

                <div class="col">
                    @Html.LabelFor(model => model.UserName)

                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.UserName)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Nombre)

                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Nombre)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.ApellidoPaterno)

                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                </div>
            </div>

            <div class="row">

                <div class="col">
                    @Html.LabelFor(model => model.ApellidoMaterno)

                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Email)

                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Email)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Password)

                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>

            <div class="row">

                <div class="col">
                    @Html.LabelFor(model => model.Sexo)

                    @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Sexo)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Telefono)

                    @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Telefono)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Celular)

                    @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Celular)
                </div>
            </div>

            <div class="row">

                <div class="col">
                    @Html.LabelFor(model => model.FechaNacimiento)
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa-solid fa-calendar"></i></span>

                        @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id = "txtNombre" })

                        @Html.ValidationMessageFor(model => model.FechaNacimiento)
                    </div>
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.CURP)

                    @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.CURP)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Image)
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-user-plus"></i></span>
                        <input id="inpImagen" type='file' class="form-control" name="inpImagen" onchange="validateFile(this), visualizarImagen(this);  " />
                    </div>
                    @if (Model.Image == null)
                    {
                        <img id="Img" src="~/Content/Images/guest-user.png" style="width:250px ; height:250px" />
                    }
                    else
                    {
                        <img id="Img" src="data:image/*;base64,@Model.Image" style="width:250px ; height:250px" />
                    }
                </div>
            </div>

            <div class="row">

                <div class="col">
                    @Html.LabelFor(model => model.Role)
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa-solid fa-user-group"></i></span>

                        @*@Html.TextBoxFor(model => model.Role.IdRole, new { @class = "form-control", @id = "txtNombre" })*@

                        @Html.DropDownListFor(model => model.Role.IdRole, new SelectList(Model.Role.Roles, "IdRole", "Name"), "Selecciona una opción", new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.Role.IdRole)
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col">
                    @Html.LabelFor(model => model.Direccion.Calle)

                    @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Direccion.Calle)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Direccion.NumeroExterior)

                    @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                </div>

                <div class="col">
                    @Html.LabelFor(model => model.Direccion.NumeroInterior)

                    @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @id = "txtNombre" })

                    @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais)

                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlPais" })

                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)
                </div>


                @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                {
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)

                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })
                    </div>
                }
                else
                {
            <div class="col-md-3">
                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)

                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })

                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado)
            </div>
                }

                @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                {
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.Colonia.Municipio)

                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })
                    </div>
                }
                else
                {
            <div class="col-md-3">
                @Html.LabelFor(model => model.Direccion.Colonia.Municipio)

                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })

                @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.IdMunicipio)
            </div>
                }

                @if (Model.Direccion.Colonia.Colonias == null)
                {
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.Colonia)

                        @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })
                    </div>
                }
                else
                {
            <div class="col-md-3">
                @Html.LabelFor(model => model.Direccion.Colonia)

                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })

                @Html.ValidationMessageFor(model => model.Direccion.Colonia.IdColonia)
            </div>
                }
                <div class="col text-center">   
                    <input type="submit" value="Guardar" class="btn btn-success " />

                    @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                </div>
            </div>
        }
    </div>
</div>

@Scripts.Render("~/bundles/jquery")


<script type="text/javascript">
     $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEstado")',
                dataType: 'json',
                data: { IdPais: $("#ddlPais").val() },
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="'
                                                   + estados.IdEstado + '">'
                                                   + estados.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });//.ajax
        });//ddlPais
        });//documento

        $(document).ready(function () {
            $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="'
                                                   + municipios.IdMunicipio + '">'
                                                   + municipios.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });//.ajax
        });//ddlPais
        });//documento

        $(document).ready(function () {
            $("#ddlMunicipio").change(function () {
                $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetColonia")',
                dataType: 'json',
                data: { IdMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                    $.each(colonias, function (i, colonias) {
                        $("#ddlColonia").append('<option value="'
                                                   + colonias.IdColonia + '">'
                                                   + colonias.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });//.ajax
        });//ddlPais
        });//documento

    function validateFile() {
        var allowedExtension = ['jpeg', 'jpg', 'png'];
        var fileExtension = document.getElementById('inpImagen').value.split('.').pop().toLowerCase();
        var isValidFile = false;
        for (var index in allowedExtension) {
            if (fileExtension === allowedExtension[index]) {
                isValidFile = true;
                break;
            }
        }
        if (!isValidFile) {
            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
            document.getElementById('inpImagen').value = ""
        }
        return isValidFile;
    }
    function visualizarImagen(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#Img').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>